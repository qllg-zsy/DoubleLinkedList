双方向リスト（Doubly Linked List） は、各ノードが前のノードと次のノードの両方を参照できるポインタを持つデータ構造です。以下のような特徴があります：

双方向の参照
　各ノードは、前のノードを指す prev ポインタと、次のノードを指す next ポインタの2つを持っています。これにより、リストを前後どちらの方向にもたどることができます。

柔軟な挿入・削除操作
　ノードの挿入や削除を行う際、前後のノードのポインタを適切に更新するだけで済むため、配列に比べて効率的です。ただし、対象のノードを事前に取得している必要があります。

単方向リストよりメモリ使用量が多い
　各ノードが前後のポインタを保持するため、単方向リストに比べて1ノードあたりのメモリ使用量が増加します。
